pipeline {
  agent any
  options {
    timestamps()
  }
  stages {
    stage('Setup Python venv') {
      steps {
        sh '''
          set -euxo pipefail
          python3 -m venv .venv
          . .venv/bin/activate
          python --version
          pip install --upgrade pip
          pip install -r requirements.txt
        '''
      }
    }
    stage('Test') {
      steps {
        sh '''
          set -euxo pipefail
          . .venv/bin/activate
          mkdir -p reports
          pytest -q --junitxml=reports/pytest-junit.xml
        '''
      }
    }
    stage('Package') {
      steps {
        sh '''
          set -euxo pipefail
          tar czf python-build-artifact.tar.gz app
        '''
      }
    }
  }
  post {
    always {
      junit allowEmptyResults: true, testResults: 'reports/*.xml'
      archiveArtifacts artifacts: 'python-build-artifact.tar.gz', fingerprint: true, onlyIfSuccessful: false
    }
  }
}

